{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport Inicio from \"../screens/inicio\";\nimport SignUP from \"../screens/general/SignUp\";\nimport Proyectos from \"../screens/proyectos/verproyectos\";\nimport Inscripciones from \"../screens/inscripciones/verinscripciones\";\nimport Avances from \"../screens/avances/verAvances\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme\n  }, React.createElement(RootNavigator, null));\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: BottomTabNavigator,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    }\n  }), React.createElement(Stack.Group, {\n    screenOptions: {\n      presentation: 'modal'\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Modal\",\n    component: ModalScreen\n  })));\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"Inicio\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Inicio\",\n    component: Inicio,\n    options: {\n      title: 'Inicio',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(TabBarIcon, {\n          name: \"home\",\n          color: color\n        });\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(Pressable, {\n          style: function style(_ref3) {\n            var pressed = _ref3.pressed;\n            return {\n              opacity: pressed ? 0.5 : 1\n            };\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"gears\",\n          size: 25,\n          color: Colors[colorScheme].text,\n          style: {\n            marginLeft: 15\n          }\n        }));\n      }\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"SignUp\",\n    component: SignUP,\n    options: {\n      title: 'Sing Up',\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color;\n        return React.createElement(TabBarIcon, {\n          name: \"user-o\",\n          color: color\n        });\n      }\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"VerProyectos\",\n    component: Proyectos,\n    options: function options(_ref5) {\n      var navigation = _ref5.navigation;\n      return {\n        title: 'Proyectos',\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var color = _ref6.color;\n          return React.createElement(TabBarIcon, {\n            name: \"book\",\n            color: color\n          });\n        }\n      };\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"VerInscripciones\",\n    component: Inscripciones,\n    options: {\n      title: 'Inscripciones',\n      tabBarIcon: function tabBarIcon(_ref7) {\n        var color = _ref7.color;\n        return React.createElement(TabBarIcon, {\n          name: \"list-alt\",\n          color: color\n        });\n      }\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"VerAvances\",\n    component: Avances,\n    options: {\n      title: 'Avances',\n      tabBarIcon: function tabBarIcon(_ref8) {\n        var color = _ref8.color;\n        return React.createElement(TabBarIcon, {\n          name: \"signal\",\n          color: color\n        });\n      }\n    }\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(FontAwesome, _extends({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"sources":["D:/Yulder Avila/Documentos/GitHub/Proyecto4/Submodulo/navigation/index.tsx"],"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","Inicio","SignUP","Proyectos","Inscripciones","Avances","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","tabBarIcon","color","headerLeft","pressed","opacity","text","marginLeft","navigation","TabBarIcon","props","marginBottom"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n **\n \n */\nimport { FontAwesome, Ionicons  } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\n\nimport Inicio from '../screens/inicio';\nimport SignUP from '../screens/general/SignUp';\n\nimport Proyectos from '../screens/proyectos/verproyectos';\nimport Inscripciones from '../screens/inscripciones/verinscripciones';\nimport Avances from '../screens/avances/verAvances';\n\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Inicio\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>        \n\n      <BottomTab.Screen\n        name=\"Inicio\"\n        component={Inicio}\n        options={{\n          title: 'Inicio', \n          tabBarIcon: ({ color }) => <TabBarIcon name=\"home\" color={color} />,\n          headerLeft: () => (\n            \n            <Pressable \n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>              \n              <FontAwesome\n                name=\"gears\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginLeft: 15 }}\n                \n              />             \n            </Pressable>\n            \n            \n            \n\n          ),\n        }}\n      />\n\n      <BottomTab.Screen\n        name=\"SignUp\"\n        component={SignUP}\n        options={{\n          title: 'Sing Up', \n          tabBarIcon: ({ color }) => <TabBarIcon name=\"user-o\" color={color} />\n        }}\n        \n      /> \n      <BottomTab.Screen\n        name=\"VerProyectos\"\n        component={Proyectos}\n        options={({ navigation }: RootTabScreenProps<'VerProyectos'>) => ({\n          title: 'Proyectos',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"book\" color={color} /> \n        })}\n      />\n      <BottomTab.Screen\n        name=\"VerInscripciones\"\n        component={Inscripciones}\n        options={{\n          title: 'Inscripciones',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"list-alt\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"VerAvances\"\n        component={Avances}\n        options={{\n          title: 'Avances',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"signal\" color={color} />,\n        }}\n      />\n            \n    </BottomTab.Navigator>\n    \n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n\n}\n\n\n\n\n\n  \n\n"]},"metadata":{},"sourceType":"module"}